import { LoginPage } from "../PageObjects/LoginPage";
import { ReportPage } from "../PageObjects/ReportPage";
import { browser} from "protractor";

describe("ProgramRole_ReportPage", function(){
    let loginPage: LoginPage
    let reportPage: ReportPage

    beforeEach(async function(){
        loginPage = new LoginPage(browser)
        reportPage = new ReportPage(browser)
        await browser.manage().window().maximize()
        await browser.get("http://10.1.0.62/kpi/#/")
        await loginPage.loginPage("ncqphong", "1234")
        await loginPage.loginSuccess()
    })
    it("Select Program Role ", async function () {
        console.log("STEP 1: Select Current Role")
        let role = "DC2_Dev Head"
        await reportPage.SelectCurrentRole(role)
        console.log("STEP 2: Check whether this role is program")
        await reportPage.SelectProgramRoleSuccess(role)
    })
    it("Select week to view by start week and end week", async function(){
        console.log("STEP 1: Send start week and year")
        let year = "2019"
        let week = "20"
        await reportPage.SelectStartDate(year, week)
        console.log("STEP 2: Check the result after send start week")
        await reportPage.SelectStartDateSuccess(week)
        console.log("STEP 3: Send end week and year")
        await reportPage.SelectEndDate(year, week)
        console.log("STEP 4: Check the result after send end week")
        await reportPage.SelectEndDateSuccess(week)
    })
    it("Swicth previous or next week", async function(){
        console.log("STEP 1: Click 3 times on previous button")
        await reportPage.SwitchPrevWeek(3)
        console.log("STEP 2: click 2 times on next button")
        await reportPage.SwitchNextWeek(2)
        console.log("STEP 3: click on Last 4 weeks button")
        await reportPage.GetLast4Weeks()
    })
    it("Select project to add issue or comment", async function(){
        console.log("STEP 1: Select object to add issue or comment")
        await reportPage.SelectComment("Schedule", 4)
        console.log("STEP 2: Select project to add issue or comment")
        await reportPage.SelectProjectToAddIssueComment("RB Platform")
        console.log("STEP 3: Add and close new Comment")
        await reportPage.AddComment()
        await reportPage.CommentModel("New comment for Schedule", "Desciption")
        await reportPage.AddAndClose("Added the comment successfully")
    })
    it("Report for Schedule", async function(){
        console.log("STEP 1: Add and continue new comment")
        await reportPage.SelectComment("Schedule", 4)
        await reportPage.AddComment()
        await reportPage.CommentModel("New comment for Schedule", "Desciption")
        await reportPage.AddAndContinue("Added the comment successfully")
        console.log("STEP 2: Add and close new Comment")
        await reportPage.AddComment()
        await reportPage.CommentModel("New comment for Schedule", "Desciption")
        await reportPage.AddAndClose("Added the comment successfully")
        console.log("STEP 3: Add and continue new issue")
        await reportPage.SelectComment("Schedule", 4)
        await reportPage.AddIssue()
        await reportPage.IssueModel("New issue for Schedule", "Desciption", "Action")
        await reportPage.AddAndContinue("Added the issue successfully")
        console.log("STEP 4: Add and close new Issue")
        await reportPage.AddIssue()
        await reportPage.IssueModel("New issue for Schedule", "Desciption", "Action")
        await reportPage.AddAndClose("Added the issue successfully")
        console.log("STEP 5: Cancel new comment or new Issue")
        await reportPage.AddComment()
        await reportPage.Cancel()
    })
    it("Report for Quality", async function(){
        console.log("STEP 1: Add and continue new comment")
        await reportPage.SelectComment("Schedule", 4)
        await reportPage.AddComment()
        await reportPage.CommentModel("New comment for Quality", "Desciption")
        await reportPage.AddAndContinue("Added the comment successfully")
        console.log("STEP 2: Add and close new Comment")
        await reportPage.AddComment()
        await reportPage.CommentModel("New comment for Quality", "Desciption")
        await reportPage.AddAndClose("Added the comment successfully")
        console.log("STEP 3: Add and continue new issue")
        await reportPage.SelectComment("Quality", 4)
        await reportPage.AddIssue()
        await reportPage.IssueModel("New issue for Quality", "Desciption", "Action")
        await reportPage.AddAndContinue("Added the issue successfully")
        console.log("STEP 4: Add and close new Issue")
        await reportPage.AddIssue()
        await reportPage.IssueModel("New issue for Quality", "Desciption", "Action")
        console.log("Click resolved issue")
        await reportPage.ClickResolvedIssue()
        await reportPage.AddAndClose("Added the issue successfully")
        console.log("STEP 5: Cancel new comment or new Issue")
        await reportPage.SelectComment("Quality", 4)
        await reportPage.Cancel()
    })
    it("Report for Effort", async function(){
        console.log("STEP 1: Add and continue new comment")
        await reportPage.SelectComment("Effort", 4)
        await reportPage.AddComment()
        await reportPage.CommentModel("New comment for Effort", "Desciption")
        await reportPage.AddAndContinue("Added the comment successfully")
        console.log("STEP 2: Add and close new Comment")
        await reportPage.AddComment()
        await reportPage.CommentModel("New comment for Effort", "Desciption")
        await reportPage.AddAndClose("Added the comment successfully")
        console.log("STEP 3: Add and continue new issue")
        await reportPage.SelectComment("Effort", 4)
        await reportPage.AddIssue()
        await reportPage.IssueModel("New issue for Effort", "Desciption", "Action")
        await reportPage.AddAndContinue("Added the issue successfully")
        console.log("STEP 4: Add and close new Issue")
        await reportPage.AddIssue()
        await reportPage.IssueModel("New issue for Effort", "Desciption", "Action")
        console.log("Click resolved issue")
        await reportPage.ClickResolvedIssue()
        await reportPage.AddAndClose("Added the issue successfully")
        console.log("STEP 5: Cancel new comment or new Issue")
        await reportPage.SelectComment("Effort", 4)
        await reportPage.Cancel()
    })
    it("Report for Risk", async function(){
        console.log("STEP 1: Add and continue new comment")
        await reportPage.SelectComment("Risk", 4)
        await reportPage.AddComment()
        await reportPage.CommentModel("New comment for Risk", "Desciption")
        await reportPage.AddAndContinue("Added the comment successfully")
        console.log("STEP 2: Add and close new Comment")
        await reportPage.AddComment()
        await reportPage.CommentModel("New comment for Risk", "Desciption")
        await reportPage.AddAndClose("Added the comment successfully")
        console.log("STEP 3: Add and continue new issue")
        await reportPage.SelectComment("Risk", 4)
        await reportPage.AddIssue()
        await reportPage.IssueModel("New issue for Risk", "Desciption", "Action")
        await reportPage.AddAndContinue("Added the issue successfully")
        console.log("STEP 4: Add and close new Issue")
        await reportPage.AddIssue()
        await reportPage.IssueModel("New issue for Risk", "Desciption", "Action")
        console.log("Click resolved issue")
        await reportPage.ClickResolvedIssue()
        await reportPage.AddAndClose("Added the issue successfully")
        console.log("STEP 5: Cancel new comment or new Issue")
        await reportPage.SelectComment("Risk", 4)
        await reportPage.Cancel()
    })
    it("Report for Attrition", async function(){
        console.log("STEP 1: Add and continue new comment")
        await reportPage.SelectComment("Attrition(%)", 4)
        await reportPage.AddComment()
        await reportPage.CommentModel("New comment for Attrition", "Desciption")
        await reportPage.AddAndContinue("Added the comment successfully")
        console.log("STEP 2: Add and close new Comment")
        await reportPage.AddComment()
        await reportPage.CommentModel("New comment for Attrition", "Desciption")
        await reportPage.AddAndClose("Added the comment successfully")
        console.log("STEP 3: Add and continue new issue")
        await reportPage.SelectComment("Attrition(%)", 4)
        await reportPage.AddIssue()
        await reportPage.IssueModel("New issue for Attrition", "Desciption", "Action")
        await reportPage.AddAndContinue("Added the issue successfully")
        console.log("STEP 4: Add and close new Issue")
        await reportPage.AddIssue()
        await reportPage.IssueModel("New issue for Attrition", "Desciption", "Action")
        console.log("Click resolved issue")
        await reportPage.ClickResolvedIssue()
        await reportPage.AddAndClose("Added the issue successfully")
        console.log("STEP 5: Cancel new comment or new Issue")
        await reportPage.SelectComment("Attrition(%)", 4)
        await reportPage.Cancel()
    })
    it("Report for NBR(%)", async function(){
        console.log("STEP 1: Add and continue new comment")
        await reportPage.SelectComment("NBR(%)", 4)
        await reportPage.AddComment()
        await reportPage.CommentModel("New comment for NBR(%)", "Desciption")
        await reportPage.AddAndContinue("Added the comment successfully")
        console.log("STEP 2: Add and close new Comment")
        await reportPage.AddComment()
        await reportPage.CommentModel("New comment for NBR(%)", "Desciption")
        await reportPage.AddAndClose("Added the comment successfully")
        console.log("STEP 3: Add and continue new issue")
        await reportPage.SelectComment("NBR(%)", 4)
        await reportPage.AddIssue()
        await reportPage.IssueModel("New issue for NBR(%)", "Desciption", "Action")
        await reportPage.AddAndContinue("Added the issue successfully")
        console.log("STEP 4: Add and close new Issue")
        await reportPage.AddIssue()
        await reportPage.IssueModel("New issue for NBR(%)", "Desciption", "Action")
        console.log("Click resolved issue")
        await reportPage.ClickResolvedIssue()
        await reportPage.AddAndClose("Added the issue successfully")
        console.log("STEP 5: Cancel new comment or new Issue")
        await reportPage.SelectComment("NBR(%)", 4)
        await reportPage.Cancel()
    })
    it("Report for BNR", async function(){
        console.log("STEP 1: Add and continue new comment")
        await reportPage.SelectComment("BNR", 4)
        await reportPage.AddComment()
        await reportPage.CommentModel("New comment for BNR", "Desciption")
        await reportPage.AddAndContinue("Added the comment successfully")
        console.log("STEP 2: Add and close new Comment")
        await reportPage.AddComment()
        await reportPage.CommentModel("New comment for BNR", "Desciption")
        await reportPage.AddAndClose("Added the comment successfully")
        console.log("STEP 3: Add and continue new issue")
        await reportPage.SelectComment("BNR", 4)
        await reportPage.AddIssue()
        await reportPage.IssueModel("New issue for BNR", "Desciption", "Action")
        await reportPage.AddAndContinue("Added the issue successfully")
        console.log("STEP 4: Add and close new Issue")
        await reportPage.AddIssue()
        await reportPage.IssueModel("New issue for BNR", "Desciption", "Action")
        console.log("Click resolved issue")
        await reportPage.ClickResolvedIssue()
        await reportPage.AddAndClose("Added the issue successfully")
        console.log("STEP 5: Cancel new comment or new Issue")
        await reportPage.SelectComment("BNR", 4)
        await reportPage.Cancel()
    })
    it("Report for Billable Growth(%)", async function(){
        console.log("STEP 1: Add and continue new comment")
        await reportPage.SelectComment("Billable Growth(%)", 4)
        await reportPage.AddComment()
        await reportPage.CommentModel("New comment for Billable Growth(%)", "Desciption")
        await reportPage.AddAndContinue("Added the comment successfully")
        console.log("STEP 2: Add and close new Comment")
        await reportPage.AddComment()
        await reportPage.CommentModel("New comment for Billable Growth(%)", "Desciption")
        await reportPage.AddAndClose("Added the comment successfully")
        console.log("STEP 3: Add and continue new issue")
        await reportPage.SelectComment("Billable Growth(%)", 4)
        await reportPage.AddIssue()
        await reportPage.IssueModel("New issue for Billable Growth(%)", "Desciption", "Action")
        await reportPage.AddAndContinue("Added the issue successfully")
        console.log("STEP 4: Add and close new Issue")
        await reportPage.AddIssue()
        await reportPage.IssueModel("New issue for Billable Growth(%)", "Desciption", "Action")
        console.log("Click resolved issue")
        await reportPage.ClickResolvedIssue()
        await reportPage.AddAndClose("Added the issue successfully")
        console.log("STEP 5: Cancel new comment or new Issue")
        await reportPage.SelectComment("Billable Growth(%)", 4)
        await reportPage.Cancel()
    })
    it("Report for Staff Level Index", async function(){
        console.log("STEP 1: Add and continue new comment")
        await reportPage.SelectComment("Staff Level Index", 4)
        await reportPage.AddComment()
        await reportPage.CommentModel("New comment for Staff Level Index", "Desciption")
        await reportPage.AddAndContinue("Added the comment successfully")
        console.log("STEP 2: Add and close new Comment")
        await reportPage.AddComment()
        await reportPage.CommentModel("New comment for Staff Level Index", "Desciption")
        await reportPage.AddAndClose("Added the comment successfully")
        console.log("STEP 3: Add and continue new issue")
        await reportPage.SelectComment("Staff Level Index", 4)
        await reportPage.AddIssue()
        await reportPage.IssueModel("New issue for Staff Level Index", "Desciption", "Action")
        await reportPage.AddAndContinue("Added the issue successfully")
        console.log("STEP 4: Add and close new Issue")
        await reportPage.AddIssue()
        await reportPage.IssueModel("New issue for Staff Level Index", "Desciption", "Action")
        console.log("Click resolved issue")
        await reportPage.ClickResolvedIssue()
        await reportPage.AddAndClose("Added the issue successfully")
        console.log("STEP 5: Cancel new comment or new Issue")
        await reportPage.SelectComment("Staff Level Index", 4)
        await reportPage.Cancel()
    })
    it("Add issue or comment from project report", async function(){
        console.log("STEP 1: Select Current Role")
        let role = "DC2_Dev Head"
        await reportPage.SelectCurrentRole(role)
        console.log("STEP 2: Check whether this role is program")
        await reportPage.SelectProgramRoleSuccess(role)
        console.log("STEP 3: Add issue or comment from project report")
        await reportPage.SelectComment("Schedule", 4)
        await reportPage.AddIssueOrComment()
        console.log("STEP 4: Select project name to add issue/comment from project report")
        await reportPage.SelectProjectReport("RB_DSC_Dev")
        console.log("STEP 5: Add one issue or comment at 2nd position")
        await reportPage.AddOneIssueCommentFromTable(2)
        console.log("STEP 6: Add all issue or comment from project report")
        await reportPage.AddAllIssueCommentFromTable()
    })
    it("Select project to add comment or issue", async function(){
        console.log("STEP 1: Click Add button to display Add Comment/Issue Model")
        await reportPage.SelectComment("Schedule", 4)
        console.log("STEP 2: Choose the project to add comment or issue")
        await reportPage.SelectProjectToAddIssueComment("RB Platform")
    })
    it("Report for Business Opportunity", async function(){
        console.log("STEP 1: Add new business opportunity with full information")
        await reportPage.BusinessOpportunity("tram", "RB_GVBM", "sfsfsf", "unknown", "unknow", "unknown", "unknown")
        console.log("STEP 2: Add new business opportunity with incomplete information")
        await reportPage.BusinessOpportunity("tram1", "RB_DSC_Dev", "sfsfsf", "unknown", "", "","")
        await reportPage.BusinessOpportunity("tram2", "RB_C20_Design", "sfsfsf", "unknown", "dsdsd", "","")
        console.log("STEP 3: Delete customer at 2nd row")
        await reportPage.DeleteBusinessOpportunity(2)
        await reportPage.DeleteClickOK()
    })
    it("Add from business opportunity table", async function(){
        console.log("STEP 1: Select Current Role")
        let role = "DC2_Dev Head"
        await reportPage.SelectCurrentRole(role)
        console.log("STEP 2: Check whether this role is program")
        await reportPage.SelectProgramRoleSuccess(role)
        console.log("STEP 3: Add one business opportunity from business opportunity table")
        await reportPage.AddBusinessOpport()
        await reportPage.AddOneBusinessFromTable(9)
        console.log("STEP 4: Add all business opportunity from bussiness opportunity table")
        await reportPage.AddAllBusinessFromTable()
    })
    it("Report for Improvement /Initiative", async function(){
        console.log("Add a comment for Improvement /Initiative")
        await reportPage.ProjectHighlightComment("new comment for Improvement /Initiative")
    })
    it("Report for Project Highlight", async function(){
        console.log("Add a comment for Project Highlight")
        await reportPage.ProjectHighlightComment("new comment for Project Hightlight")
    })
    it("Report for Other Activity", async function(){
        console.log("Add a comment for Other Activity")
        await reportPage.OtherActivityComment("new comment for Other Activity")
    })
    it("View Issue or Commnent in Model", async function(){
        console.log("STEP 1: Add and continue a new issue")
        await reportPage.SelectComment("Schedule", 4)
        await reportPage.AddIssue()
        await reportPage.IssueModel("new issue 1", "description", "action")
        await reportPage.AddAndContinue("Added the issue successfully")
        await browser.sleep(5000)
        console.log("STEP 2: Add and continue a new comment")
        await reportPage.AddComment()
        await reportPage.CommentModel("new comment1", "description")
        await reportPage.AddAndContinue("Added the comment successfully")
        console.log("STEP 3: Add and close a new comment")
        await reportPage.CommentModel("new comment 2", "description")
        await reportPage.AddAndClose("Added the comment successfully")
        console.log("STEP 4: View issues or comment in Issue/Comment Model")
        await reportPage.ViewIssueCommentModel("Schedule")
    })
    it("Delete Issue or Comment from Model", async function(){
        console.log("STEP 1: Add and continue new issue 1")
        await reportPage.SelectComment("Schedule", 4)
        await reportPage.AddIssue()
        await reportPage.IssueModel("new issue 1", "description", "action")
        await reportPage.AddAndContinue("Added the issue successfully")
        console.log("STEP 2: Add and continue new issue 2")
        await reportPage.AddIssue()
        await reportPage.IssueModel("new issue 2", "description", "action")
        await reportPage.AddAndContinue("Added the issue successfully")
        console.log("STEP 3: Add and continue new comment 1")
        await reportPage.AddComment()
        await reportPage.CommentModel("new comment 1", "description")
        await reportPage.AddAndContinue("Added the comment successfully")
        console.log("STEP 3: Add and close new comment 2")
        await reportPage.CommentModel("new comment 2", "description")
        await reportPage.AddAndClose("Added the comment successfully")
        console.log("STEP 4: View Issue or Comment Model of Schedule")
        await reportPage.ViewIssueCommentModel("Schedule")
        console.log("STEP 5: Delete 1st issue or comment from Model")
        await reportPage.DeleteIssueCommentInModel(1)
        console.log("STEP 6: Click OK to delete issue or comment")
        await reportPage.IssueCommentModelClickOK(1)
        console.log("STEP 7: Delete 2nd issue or comment from Model")
        await reportPage.DeleteIssueCommentInModel(2)
        console.log("STEP 6: Click Cancel to cancel command")
        await reportPage.IssueCommentModelClickCancel()
        await reportPage.DeleteIssueCommentInModel(1)
    })
    it("Submit report of previous week", async function(){
        console.log("STEP 1: Add and close new comment for Schedule")
        await reportPage.SelectComment("Schedule", 3)
        await reportPage.AddComment()
        await reportPage.CommentModel("New comment", "Desciption")
        await reportPage.AddAndClose("Added the comment successfully")
        console.log("STEP 2: Add and continue new issue Quality (not click resolve button)")
        await reportPage.SelectComment('Quality', 3)
        await reportPage.AddIssue()
        await reportPage.IssueModel("New issue 1 for Quality", "Desciption 1 for Quality", "Action 1 for Quality")
        await reportPage.ClickResolvedIssue()
        await reportPage.AddAndContinue("Added the issue successfully")
        console.log("STEP 3: Add and close new issue for Quality (click resolve button)")
        await reportPage.AddIssue()
        await reportPage.IssueModel("New issue 2 for Quality", "Desciption 2 for Quality", "Action 2 for Quality")
        await reportPage.ClickResolvedIssue()
        await reportPage.AddAndClose("Added the issue successfully")
        console.log("STEP 4: Add and close new comment for Effort")
        await reportPage.SelectComment("Effort", 3)
        await reportPage.AddComment()
        await reportPage.CommentModel("New comment for Effort", "Desciption for Effort")
        await reportPage.AddAndClose("Added the comment successfully")
        console.log("STEP 5: Choose project RB Automation and add new issue for BNR")
        await reportPage.SelectComment("BNR", 3)
        await reportPage.SelectProjectToAddIssueComment("RB Automation")
        await reportPage.AddIssue()
        await reportPage.IssueModel("New issue for BNR", "Desciption for BNR", "Action for BNR")
        await reportPage.ClickResolvedIssue()
        await reportPage.AddAndClose("Added the issue successfully")
        console.log("STEP 6: Add issue or comment from project report for Risk")
        await reportPage.SelectComment("Risk", 3)
        await reportPage.AddIssueOrComment()
        console.log("STEP 7: Add one issue or comment at 2nd position")
        await reportPage.AddOneIssueCommentFromTable(2)
        console.log("STEP 8: Add all issue or comment from project report")
        await reportPage.AddAllIssueCommentFromTable()
        await reportPage.CloseModel()
        console.log("STEP 9: Add 2 new business opportunity")
        await reportPage.BusinessOpportunity("tram", "RB Automation", "sfsfsf", "unknown", "unknow", "unknown", "unknown")
        await reportPage.BusinessOpportunity("tram", "RB Trunking", "sfsfsf", "unknown", "unknow", "unknown", "unknown")
        console.log("STEP 10: Delete customer at 2nd row")
        await reportPage.DeleteBusinessOpportunity(2)
        await reportPage.DeleteClickOK()
        console.log("STEP 11: Add one business opportunity from business opportunity table")
        await reportPage.AddBusinessOpport()
        await reportPage.AddOneBusinessFromTable(2)
        await reportPage.CloseModel()
        console.log("STEP 12: Add all business opportunity from bussiness opportunity table")
        await reportPage.AddAllBusinessFromTable()
        console.log("STEP 13 : Add new improvement/initiative")
        await reportPage.ImproveComment("hello")
        console.log("STEP 14: Add new Project Highlight")
        await reportPage.ProjectHighlightComment("Highlight")
        console.log("STEP 15: Add new Other Activity")
        await reportPage.OtherActivityComment("Other Activity")
        console.log("STEP 16: Submit report")
        await reportPage.ReportSubmitPrev()
    })
    it("Submit report of current week", async function(){
        console.log("STEP 1: Add and close new comment for Schedule")
        await reportPage.SelectComment("Schedule", 4)
        await reportPage.AddComment()
        await reportPage.CommentModel("New comment", "Desciption")
        await reportPage.AddAndClose("Added the comment successfully")
        console.log("STEP 2: Add and continue new issue Quality (not click resolve button)")
        await reportPage.SelectComment('Quality', 4)
        await reportPage.AddIssue()
        await reportPage.IssueModel("New issue 1 for Quality", "Desciption 1 for Quality", "Action 1 for Quality")
        await reportPage.ClickResolvedIssue()
        await reportPage.AddAndContinue("Added the issue successfully")
        console.log("STEP 3: Add and close new issue for Quality (click resolve button)")
        await reportPage.AddIssue()
        await reportPage.IssueModel("New issue 2 for Quality", "Desciption 2 for Quality", "Action 2 for Quality")
        await reportPage.ClickResolvedIssue()
        await reportPage.AddAndClose("Added the issue successfully")
        console.log("STEP 4: Add and close new comment for Effort")
        await reportPage.SelectComment("Effort", 4)
        await reportPage.AddComment()
        await reportPage.CommentModel("New comment for Effort", "Desciption for Effort")
        await reportPage.AddAndClose("Added the comment successfully")
        console.log("STEP 5: Choose project RB Automation and add new issue for BNR")
        await reportPage.SelectComment("BNR", 4)
        await reportPage.SelectProjectToAddIssueComment("RB Automation")
        await reportPage.AddIssue()
        await reportPage.IssueModel("New issue for BNR", "Desciption for BNR", "Action for BNR")
        await reportPage.ClickResolvedIssue()
        await reportPage.AddAndClose("Added the issue successfully")
        console.log("STEP 6: Add issue or comment from project report for Risk")
        await reportPage.SelectComment("Risk", 4)
        await reportPage.AddIssueOrComment()
        console.log("STEP 7: Add one issue or comment at 2nd position")
        await reportPage.AddOneIssueCommentFromTable(2)
        console.log("STEP 8: Add all issue or comment from project report")
        await reportPage.AddAllIssueCommentFromTable()
        await reportPage.CloseModel()
        console.log("STEP 9: Add 2 new business opportunity")
        await reportPage.BusinessOpportunity("tram", "RB Automation", "sfsfsf", "unknown", "unknow", "unknown", "unknown")
        await reportPage.BusinessOpportunity("tram", "RB Trunking", "sfsfsf", "unknown", "unknow", "unknown", "unknown")
        console.log("STEP 10: Delete customer at 2nd row")
        await reportPage.DeleteBusinessOpportunity(2)
        await reportPage.DeleteClickOK()
        console.log("STEP 11: Add one business opportunity from business opportunity table")
        await reportPage.AddBusinessOpport()
        await reportPage.AddOneBusinessFromTable(1)
        await reportPage.CloseModel()
        console.log("STEP 12: Add all business opportunity from bussiness opportunity table")
        await reportPage.AddAllBusinessFromTable()
        console.log("STEP 13 : Add new improvement/initiative")
        await reportPage.ImproveComment("hello")
        console.log("STEP 14: Add new Project Highlight")
        await reportPage.ProjectHighlightComment("Highlight")
        console.log("STEP 15: Add new Other Activity")
        await reportPage.OtherActivityComment("Other Activity")
        console.log("STEP 16: Submit report")
        await reportPage.ReportSubmitPrev()
    })

})